<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:oscal="http://csrc.nist.gov/ns/oscal/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           targetNamespace="http://csrc.nist.gov/ns/oscal/1.0">
   <xs:include schemaLocation="oscal-prose-module.xsd"/>
   <!--OSCAL Control Catalog Format-->
   <!--short name: oscal-catalog-->
   <!--The OSCAL Control Catalog format can be used to describe a collection of security controls and related sub-controls, along with a variety of control metadata. The root of the Control Catalog format is catalog.-->
   <!--An XML Schema is provided for the OSCAL Catalog XML model.-->
   <xs:element name="base">
      <xs:annotation>
         <xs:documentation>
            <b>Base: </b>Wrapper for other stuff</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal:single-string-required"/>
            <xs:element minOccurs="0" ref="oscal:single-string"/>
            <xs:element minOccurs="1" ref="oscal:single-mixed"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal:plural"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal:plural-mixed"/>
            <xs:element minOccurs="0" ref="oscal:chunk"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal:block"/>
            <xs:choice>
               <xs:element minOccurs="0" ref="oscal:tweedledee"/>
               <xs:element minOccurs="0" ref="oscal:tweedledum"/>
            </xs:choice>
         </xs:sequence>
         <xs:attribute name="id" type="xs:ID" use="required">
            <xs:annotation>
               <xs:documentation>
                  <b>An ID: </b>Like it says</xs:documentation>
            </xs:annotation>
         </xs:attribute>
         <xs:attribute name="some_string" type="xs:string" use="required">
            <xs:annotation>
               <xs:documentation>
                  <b>A string flag: </b>Like it says</xs:documentation>
            </xs:annotation>
         </xs:attribute>
      </xs:complexType>
   </xs:element>
   <xs:element name="single-string-required">
      <xs:annotation>
         <xs:documentation>
            <b>Single string (required): </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="single-string">
      <xs:annotation>
         <xs:documentation>
            <b>Single string: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="single-mixed">
      <xs:annotation>
         <xs:documentation>
            <b>Single string (required): </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true">
         <xs:group ref="oscal:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="plural">
      <xs:annotation>
         <xs:documentation>
            <b>A single plural (ha): </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="plural-mixed">
      <xs:annotation>
         <xs:documentation>
            <b>Only one plural, but possibly mixed.: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="plural-flagged-mixed">
      <xs:annotation>
         <xs:documentation>
            <b>Only one plural, but possibly mixed and possibly flagged.: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="chunk">
      <xs:annotation>
         <xs:documentation>
            <b>Chunk: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal:single-string-required"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="block">
      <xs:annotation>
         <xs:documentation>
            <b>Block: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal:single-string-required"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="tweedledee">
      <xs:annotation>
         <xs:documentation>
            <b>One Choice: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal:single-string-required"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="tweedledum">
      <xs:annotation>
         <xs:documentation>
            <b>Another Choice: </b>Like it says</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal:single-string-required"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:group name="prose">
      <xs:choice>
         <xs:element ref="oscal:p"/>
         <xs:element ref="oscal:ul"/>
         <xs:element ref="oscal:ol"/>
         <xs:element ref="oscal:pre"/>
      </xs:choice>
   </xs:group>
</xs:schema>
