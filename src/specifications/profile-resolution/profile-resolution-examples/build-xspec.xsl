<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:opr="http://csrc.nist.gov/ns/oscal/profile-resolution"
    
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:math="http://www.w3.org/2005/xpath-functions/math"
    exclude-result-prefixes="xs math"
    version="3.0">
    
    <xsl:output indent="yes"/>
    
    <xsl:template match="/">
        <xsl:text>&#xA;</xsl:text>
        <xsl:comment expand-text="true"> autogenerated { current-dateTime() } following model in example-set.xspec</xsl:comment>
        <x:description stylesheet="../../../utils/util/resolver-pipeline/oscal-profile-RESOLVE.xsl"
            run-as="external">
            
            <!-- x:description/@run-as='external' permits the context item to be determined dynamically per scenario
    cf https://github.com/xspec/xspec/wiki/External-Transformation#global-context-item
    
    helper function for cleaning up whitespace:
      see https://github.com/xspec/xspec/wiki/Integrating-Your-Own-Test-Helpers for
      for an example see https://github.com/xspec/xspec/blob/master/tutorial/helper/ws-only-text/href_stylesheet.xspec
    -->
         
            <x:helper stylesheet="../../../utils/util/resolver-pipeline/oscal-profile-test-helper.xsl" />
<!-- looking at all the profile documents in the same directory as this XSLT -->
            <xsl:variable name="collection-at" as="xs:string" expand-text="true">{ document-uri(document('')) ! replace(.,'/[^/]+$','') }?select=*_profile.xml</xsl:variable>
            
            <xsl:message expand-text="true">looking for profile examples in { $collection-at }</xsl:message>
            <xsl:apply-templates select="collection($collection-at)" mode="make-file-scenario"/>
            
        </x:description>
        
    </xsl:template>
    
    <xsl:template match="/" mode="make-file-scenario">
        <xsl:variable name="filepath" select="document-uri(/)"/>
        <xsl:variable name="filename" select="replace($filepath,'.+/','')"/>
        <xsl:variable name="basename" select="replace($filename,'\.xml$','')"/>
        <x:scenario label="Testing { $filename }">
            <x:context href="{ $filename }"/>
            <x:expect label="Resolution of { $filename }" select="opr:scrub(.)"
                href="output-expected/{ $basename }_RESOLVED.xml"/>
        </x:scenario>
    </xsl:template>
    
</xsl:stylesheet>